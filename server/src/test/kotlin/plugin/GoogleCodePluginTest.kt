package plugin

import org.junit.Test
import plugin.api.GoogleCodeAPI
import java.io.InputStream

class GoogleCodePluginTest {
    @Test fun test() {
        // TODO read the JSON from a file instead of source code
        val api = object : GoogleCodeAPI {
            override fun fetchProject(): InputStream {
                val json = "{\"domain\":\"code.google.com\",\"name\":\"migratordotnet\",\"summary\":\"Migration framework for .NET\",\"description\":\"Database migrations for .NET. Based on the idea of Rails ActiveRecord Migrations.\\n\\nSupported Databases\\n\\n  * MySQL\\n  * Oracle (not well tested?)\\n  * PostgreSQL\\n  * SQLite\\n  * SQL Server\\n\\nSupported Modes\\n\\n  * [NAntTask](NAntTask.md)\\n  * [MSBuildTarget](MSBuildTarget.md)\\n  * Console Application (You should be using an automation tool! :))\\n\\n## Getting Started ##\\n\\nPlease refer to the [GettingStarted](GettingStarted.md) page for some helpful information on how to get started using MigratorDotNet. See [WritingMigrations](WritingMigrations.md) for a slightly more in-depth look at how to go about writing your own Migrations.\\n\\n## Links ##\\n\\nPlease refer to the [Links](Links.md) page for some helpful links that will help to get you started with MigratorDotNET\\n\\n## Contributing ##\\n\\nPlease refer to the [Contributing](Contributing.md) and [HowToBuild](HowToBuild.md) pages for information on how to contribute to the project.\",\"stars\":183,\"license\":\"mpl11\",\"contentLicense\":\"\",\"labels\":[],\"creationTime\":0,\"repoType\":\"svn\",\"subrepos\":[],\"hasSource\":true,\"ancestorRepo\":\"\",\"logoName\":\"\",\"movedTo\":\"\"}"
                return json.byteInputStream()
            }

            override fun fetchIssuesPage(pageNum: Int): InputStream {
                val json = "{\"pageNumber\":1,\"totalPages\":2,\"issues\":[{\"id\":180,\"status\":\"New\",\"summary\":\"How to down grade (how to execute Down() methods) my migrations \",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":179,\"status\":\"New\",\"summary\":\"Add customiation of schema info table name\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":178,\"status\":\"New\",\"summary\":\"Insert of string with Quotes\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":177,\"status\":\"New\",\"summary\":\"Exe error:  \\\"This assembly is built by a runtime newer than the currently loaded runtime and cannot be loaded.\\\"\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":176,\"status\":\"New\",\"summary\":\"loadign System.Data.SQLite in 64 bit windows with 64 bit IE \",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":175,\"status\":\"New\",\"summary\":\"MSBuild cannot find dependencies on assemblies downloaded from NuGet\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":174,\"status\":\"New\",\"summary\":\"SQLite now support foreign key\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":173,\"status\":\"New\",\"summary\":\"Adding the ability to run a non-transactional Migration\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":172,\"status\":\"New\",\"summary\":\"No strong name signing\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":171,\"status\":\"New\",\"summary\":\"Create Table Doesn\\u0027t if we use columns with reserved keywords (e.g. Order)\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":170,\"status\":\"New\",\"summary\":\"Nuget\",\"labels\":[],\"stars\":0,\"commentCount\":4},{\"id\":169,\"status\":\"New\",\"summary\":\"Migratordotnet-devel misused\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":168,\"status\":\"New\",\"summary\":\"MigrationLoader should depends on IEnumerable\\u003cType\\u003e and not Assembly\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":167,\"status\":\"New\",\"summary\":\"I can\\u0027t get access to the connection or connection string\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":166,\"status\":\"New\",\"summary\":\"optional transaction usage\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":165,\"status\":\"New\",\"summary\":\"FluentMigrator\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":164,\"status\":\"New\",\"summary\":\"git repository\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":163,\"status\":\"New\",\"summary\":\"Database.Insert does not support Unicode characters (SQL Server)\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":162,\"status\":\"New\",\"summary\":\"I Think this project is dead Please see http://github.com/schambers/fluentmigrator for an active version\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":161,\"status\":\"New\",\"summary\":\"It\\u0027s not possible to add columns of data type image (Sql2008) to store more than 8000 bytes.\",\"labels\":[],\"stars\":0,\"commentCount\":3},{\"id\":160,\"status\":\"New\",\"summary\":\"Option to generate a migration SQL script rather than running scripts directly against the database.\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":159,\"status\":\"New\",\"summary\":\"SQLiteTransformationProvider#GetColumns does not return the correct DbType for Column#Type\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":158,\"status\":\"New\",\"summary\":\"Request: Documentation for running tests\",\"labels\":[],\"stars\":0,\"commentCount\":4},{\"id\":157,\"status\":\"New\",\"summary\":\"Does not work on Linux due to System.Data.SQLite.DLL \\\"DLL\\\" capitalization\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":156,\"status\":\"New\",\"summary\":\"Infinite loop when invalid target version specified\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":155,\"status\":\"New\",\"summary\":\"Support for SQL 2008 DataTypes\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":154,\"status\":\"New\",\"summary\":\"Command Timeout while running a migration script\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":153,\"status\":\"New\",\"summary\":\"The provider is not compatible with the version of Oracle client (10g)\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":152,\"status\":\"New\",\"summary\":\"Run all migrations in one transaction\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":151,\"status\":\"New\",\"summary\":\"Multiple databases in one assembly\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":150,\"status\":\"New\",\"summary\":\"SqlServerCe does not works.  Assumes default schema is dbo\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":149,\"status\":\"New\",\"summary\":\"Enhancement - locking down the version number a bit more\",\"labels\":[],\"stars\":0,\"commentCount\":4},{\"id\":148,\"status\":\"New\",\"summary\":\"SQL Server update breaks older deployments (Migrator.Providers/ Impl/ SqlServer/ SqlServerTransformationProvider.cs, r144)\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":147,\"status\":\"New\",\"summary\":\"Allow removal of Null constraints\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":146,\"status\":\"New\",\"summary\":\"Failing unit tests on SQL Server 2005\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":145,\"status\":\"New\",\"summary\":\"Error removing columns with unique constraints\",\"labels\":[],\"stars\":0,\"commentCount\":3},{\"id\":144,\"status\":\"New\",\"summary\":\"SQLite.NET problems with adding Guid field with default value\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":143,\"status\":\"New\",\"summary\":\"SQLite.NET parse problems\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":142,\"status\":\"New\",\"summary\":\"SQLIte.NET problems with not null without defaults\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":141,\"status\":\"New\",\"summary\":\"SQLite.NET problems with adding primary key\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":140,\"status\":\"New\",\"summary\":\"SQLite.NET startup problem\",\"labels\":[],\"stars\":0,\"commentCount\":7},{\"id\":139,\"status\":\"New\",\"summary\":\"Inserting values with string formatting entries like \\\"{0}\\\" failes because of tracing not handling this.\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":138,\"status\":\"New\",\"summary\":\"New patch - SQLAnywhere 11 support\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":137,\"status\":\"New\",\"summary\":\"Add support for DateTimeOffset in Sql Server 2008\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":136,\"status\":\"New\",\"summary\":\"Infinite loop when rolling back\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":135,\"status\":\"Fixed\",\"summary\":\"Updated VS Item template\",\"labels\":[\"Type-Enhancement\"],\"stars\":0,\"commentCount\":3},{\"id\":134,\"status\":\"New\",\"summary\":\"Better support for SqlServer\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":133,\"status\":\"New\",\"summary\":\"CREATE PROCEDURE Migration Fails Via Migration Script\",\"labels\":[],\"stars\":0,\"commentCount\":4},{\"id\":132,\"status\":\"New\",\"summary\":\"MySQL does not support non-numeric primary keys (such as GUID)\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":131,\"status\":\"New\",\"summary\":\"Added support for multiple schemainfo instances\",\"labels\":[],\"stars\":0,\"commentCount\":4},{\"id\":130,\"status\":\"New\",\"summary\":\"SQLServer nvarchar(max)\",\"labels\":[],\"stars\":0,\"commentCount\":8},{\"id\":129,\"status\":\"New\",\"summary\":\"SQLite: Primary Keys on multiple fields\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":128,\"status\":\"New\",\"summary\":\"Delete with multi-column where broken for SQL Server\",\"labels\":[],\"stars\":0,\"commentCount\":4},{\"id\":127,\"status\":\"New\",\"summary\":\"Case sensitive schemas cause internal exception on (in this case) column rename\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":126,\"status\":\"New\",\"summary\":\"Value returned by GetColumnByName does not match the properties of the actual column in the database (SQL Server 2008, DATETIME column)\",\"labels\":[],\"stars\":0,\"commentCount\":6},{\"id\":125,\"status\":\"Fixed\",\"summary\":\"IDbCommand objects are not being properly disposed of\",\"labels\":[\"Type-Defect\"],\"stars\":0,\"commentCount\":2},{\"id\":124,\"status\":\"New\",\"summary\":\"When runiing ExecuteNonQuery command and the command has some curly brackets, the console application throws an exception.\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":123,\"status\":\"New\",\"summary\":\"Can\\u0027t use TransformationProvider.this[] to tell apart dialects\",\"labels\":[],\"stars\":0,\"commentCount\":3},{\"id\":122,\"status\":\"Invalid\",\"summary\":\"Request a Delete method to delete data without writing a sql statement\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":121,\"status\":\"New\",\"summary\":\"How to generate script from the migrations\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":120,\"status\":\"New\",\"summary\":\"How to create a column with a specific collation ?\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":119,\"status\":\"Fixed\",\"summary\":\"TransformationProvider should implement IDispose\",\"labels\":[\"Type-Defect\"],\"stars\":0,\"commentCount\":4},{\"id\":118,\"status\":\"Fixed\",\"summary\":\"Retrieving the list of migrations currently applied to the database fails on Oracle with the Oracle ODP.NET driver 10.1.0.400\",\"labels\":[\"Type-Defect\"],\"stars\":0,\"commentCount\":4},{\"id\":117,\"status\":\"New\",\"summary\":\"SqlServerDialect needs TableNameNeedsQuote to return true\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":116,\"status\":\"New\",\"summary\":\"Need documentation on how to activate Sql server 2005 dialect.\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":115,\"status\":\"New\",\"summary\":\"DDL is not rolled back on Oracle after failed migration\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":114,\"status\":\"New\",\"summary\":\"Detect reserved words (database and dialect dependant)\",\"labels\":[],\"stars\":0,\"commentCount\":6},{\"id\":113,\"status\":\"New\",\"summary\":\"Support clustered/custom indices\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":112,\"status\":\"New\",\"summary\":\"MySQL column of type LONGTEXT \",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":111,\"status\":\"New\",\"summary\":\"MySQL and DbType.Currency\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":110,\"status\":\"New\",\"summary\":\"GetColumnByName should not be case sensitive\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":109,\"status\":\"New\",\"summary\":\"Problem loading referenced aseemblies\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":108,\"status\":\"New\",\"summary\":\"Constraint update action is always the same of delete action\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":107,\"status\":\"New\",\"summary\":\"Problems when the constraint don\\u0027t have the same name of the index\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":106,\"status\":\"New\",\"summary\":\"TransformationProviderase.AddBooleanColunWithDefault is failing against Oracle XE 10.2.0.1.0\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":105,\"status\":\"New\",\"summary\":\"Exception when using another Oracle Data Provider version\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":104,\"status\":\"New\",\"summary\":\"Configuration option to define where to save the schema update info\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":103,\"status\":\"New\",\"summary\":\"Floating Point Columns Size\",\"labels\":[],\"stars\":0,\"commentCount\":5},{\"id\":102,\"status\":\"New\",\"summary\":\"Patch for Postgresql Guid support\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":101,\"status\":\"New\",\"summary\":\"Patch for multi-column indexes\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":100,\"status\":\"New\",\"summary\":\"TableExists fails to detect that table exists if table name is a reserved keyword\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":99,\"status\":\"New\",\"summary\":\"Assigning a DateTime as default value to a DateTime-field renders invalid SQL (Postgres)\",\"labels\":[],\"stars\":0,\"commentCount\":3},{\"id\":98,\"status\":\"New\",\"summary\":\"Create Migrator Classes from CommandLine\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":97,\"status\":\"New\",\"summary\":\"IDbCommand timesout after 30 seconds\",\"labels\":[],\"stars\":0,\"commentCount\":3},{\"id\":96,\"status\":\"New\",\"summary\":\"Multiple Insert Support with Patch\",\"labels\":[],\"stars\":0,\"commentCount\":4},{\"id\":95,\"status\":\"Fixed\",\"summary\":\"Down() method is not executed properly in v0.8.0\",\"labels\":[\"Type-Defect\"],\"stars\":0,\"commentCount\":8},{\"id\":94,\"status\":\"New\",\"summary\":\"Class Migrator has the same name as the Assembly Migrator: issue with Wpf\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":93,\"status\":\"New\",\"summary\":\"PostgreSQL and escaping\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":92,\"status\":\"New\",\"summary\":\"PostgreSQL support: UUID and indexes\",\"labels\":[],\"stars\":0,\"commentCount\":3},{\"id\":91,\"status\":\"Fixed\",\"summary\":\"null values for Inserts and Updates insert empty strings\",\"labels\":[\"Type-Defect\",\"Priority-High\",\"Milestone-8\"],\"stars\":0,\"commentCount\":2},{\"id\":90,\"status\":\"New\",\"summary\":\"Patch to correct quoted values in MySql\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":89,\"status\":\"Fixed\",\"summary\":\"Method \\u0027Started\\u0027 in type \\u0027Migrator.MSBuild.Logger.TaskLogger\\u0027 does not have an implementation.\",\"labels\":[\"Type-Defect\",\"Milestone-8\"],\"stars\":0,\"commentCount\":5},{\"id\":87,\"status\":\"Fixed\",\"summary\":\"Patch to correct msbuild \\\"To\\\" parameter (timestamp values) in trunk\",\"labels\":[\"Milestone-8\",\"Component-Runners\"],\"stars\":0,\"commentCount\":2},{\"id\":86,\"status\":\"New\",\"summary\":\"Inability to update a column via the Database.Update command unless column can be forced into a string.\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":85,\"status\":\"New\",\"summary\":\"PostgreSQL provider assumes schema \\\"public\\\"\",\"labels\":[],\"stars\":0,\"commentCount\":3},{\"id\":84,\"status\":\"Fixed\",\"summary\":\"Migrator.Console takes Int32 version, should be long\",\"labels\":[\"Type-Defect\"],\"stars\":0,\"commentCount\":2},{\"id\":83,\"status\":\"Fixed\",\"summary\":\"Nant migrate task doesn\\u0027t support migrating to long timestamp-style versions\",\"labels\":[\"Type-Defect\",\"Component-Runners\"],\"stars\":0,\"commentCount\":2},{\"id\":82,\"status\":\"New\",\"summary\":\"Add a timestamp column to the SchemaInfo table\",\"labels\":[],\"stars\":0,\"commentCount\":1},{\"id\":81,\"status\":\"Fixed\",\"summary\":\"Add a Database.Delete method\",\"labels\":[],\"stars\":0,\"commentCount\":2},{\"id\":80,\"status\":\"Accepted\",\"summary\":\"Database.RemoveConstraint parameter order incosistent with other Constraint methods\",\"labels\":[\"Usability\"],\"stars\":0,\"commentCount\":2}]}"
                return json.byteInputStream()
            }

            override fun fetchIssue(issueId: Int): InputStream {
                val json = "{\"id\":50,\"status\":\"Accepted\",\"summary\":\"Support an easy way to populate data from a Migration (Fixtures)\",\"labels\":[\"Type-Enhancement\",\"Priority-Medium\",\"Milestone-9\",\"Usability\"],\"stars\":0,\"commentCount\":5,\"comments\":[{\"id\":0,\"commenterId\":-3703742956867136360,\"content\":\"Yet another enhancement request.  It would be cool if there was an easy way\\r\\nto populate newly created tables with data (for testing, or for lookup\\r\\ntables, etc).  Right now we could do it with lots of insert statements in\\r\\nthe Migration, but it would be very handy to have something like Ruby\\u0027s yml\\r\\nfixture files (or maybe something more structured, like XML?).  \\r\\n\\r\\nI\\u0027m going to spend some time thinking about how to implement this (how does\\r\\nMigrator know where to find the data files, should they be embedded in the\\r\\nmigration DLL, make sure branches and merges don\\u0027t break the approach, etc)\\r\\nbut if anyone has any ideas I\\u0027d love to collaborate on design before I\\r\\nstart trying to code it.\",\"timestamp\":1217596871,\"attachments\":[]},{\"id\":1,\"commenterId\":-8092193138134663391,\"content\":\"Could be csv (first row is column names, subsequent rows are data to insert)?\\r\\nYML maybe, but that fits better with an ORM model.\\r\\n\\r\\nMaybe just a better interface for inserts?\",\"timestamp\":1217974618,\"attachments\":[]},{\"id\":2,\"commenterId\":-942787315059995438,\"content\":\"Don\\u0027t know if this helps, but I do this via a test project.  I have fixtures that\\r\\nhave RoR-like names so I can create them and have a single big test that will create\\r\\nthem all.  It doesn\\u0027t work well for static stuff like lookups, but for populating the\\r\\ndemo and test data, it\\u0027s great.  To get to this, I used PLINQO (but you could also\\r\\nuse LINQ to SQL or LINQ to Entities, depending on your data model).  Then you can run\\r\\nthe test project to populate all the data.\\r\\n\\r\\nAnother suggestion would be to have custom code that runs in the AfterUp method.  You\\r\\ncould have methods that populate the data based on the current table as of that\\r\\nmigration.  It\\u0027s a little messy, though since the data has to reflect the state as of\\r\\nthat migration.  I don\\u0027t really like the idea of doing it with straight inserts\\r\\n(unless it is lookup data), since it\\u0027s going to be hard to keep everything lined up.\\r\\n If you are willing to create an entity project that does nothing but get used to\\r\\ncreate entities that you can use in a test project, I think you can get where you\\r\\nwant and still add value via testing.\",\"timestamp\":1220378721,\"attachments\":[]},{\"id\":3,\"commenterId\":-2046228321997047296,\"content\":\"I have had this requirement in my project, I am using quite an old version of \\r\\nMigrator (huh, I am apparently a maintainer...), and I think the refactorings may \\r\\nhave lost what I am talking about.\\r\\n\\r\\nBasically I use Castle.ActiveRecord to take care of inserting the data. This seems to \\r\\nbe the cleanest \\u0026 easiest option to support IMHO, as (most) of the database issues \\r\\nare taken care of by activerecord (or i guess you could use LINQ, or whatever is your \\r\\nDAL). The issues I ran across had to do with initializing activerecord \\r\\n(ActiveRecordStarter.Initialize()), which had to be done from within the assembly \\r\\nthat was accessing the database using ActiveRecord, and passing in the xmlConfig. It \\r\\nwas a little bit messy, but works.\\r\\n\\r\\nI also have found with importing data using csv data, that this does not work well \\r\\nwith updating the csv data. If I import the data in a migration, and then update the \\r\\ncsv file, the new data will not get inserted, as it is in an old migration. Inserting \\r\\ndirectly via activerecord takes care of this problem, new data being inserted with a \\r\\nnew migration.\\r\\n\\r\\nJust my \$0.02. Let me know if you want any more details.\",\"timestamp\":1220525138,\"attachments\":[]},{\"id\":4,\"commenterId\":-7237992841471376425,\"content\":\"One thing I would suggest thinking about is having an option to _not_ run / generate\\r\\nthe test data into sql.  This helps when you go to deploy your changes to production,\\r\\nand you don\\u0027t want to insert test data for testing purposes.  This could be done by\\r\\nadding something simple like \\u0027.Tests\\u0027 to the namespace of each test class. \",\"timestamp\":1243638125,\"attachments\":[]}]}"
                return json.byteInputStream()
            }
        }

        val plugin = GoogleCodePlugin("my-project", api)
        plugin.import()
        // TODO test the output against something
    }
}